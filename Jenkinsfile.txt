pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                echo 'Building...'
                // Use Maven for building (assuming Maven is installed and added to PATH)
                bat 'mvn clean install'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests...'
                // Run tests using Maven
                bat 'mvn test'
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Performing code analysis...'
                // Perform code analysis using SonarQube
                bat 'mvn sonar:sonar'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Performing security scan...'
                // Perform security scan using OWASP Dependency-Check
                bat 'mvn dependency-check:check'
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging...'
                // Deploy to staging environment (replace with your deployment script)
                bat 'deploy-to-staging.bat'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging...'
                // Run integration tests on staging environment (replace with your script)
                bat 'run-staging-tests.bat'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production...'
                // Deploy to production environment (replace with your deployment script)
                bat 'deploy-to-production.bat'
            }
        }
    }
    post {
        success {
            mail to: 'bayandkheel12@gmail.com',
                 subject: "Success: ${currentBuild.fullDisplayName}",
                 body: "The build was successful. Check the output at ${env.BUILD_URL}."
        }
        failure {
            mail to: 'bayandkheel12@gmail.com',
                 subject: "Failed: ${currentBuild.fullDisplayName}",
                 body: "The build failed. Check the output at ${env.BUILD_URL}."
        }
        always {
            mail to: 'bayandkheel12@gmail.com',
                 subject: "Pipeline ${currentBuild.fullDisplayName}",
                 body: "Pipeline ${currentBuild.fullDisplayName} completed with status ${currentBuild.currentResult}"
        }
    }
}
