pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                echo 'Building...'
                // Use Maven for building
                sh 'mvn clean install'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests...'
                // Run tests using Maven
                sh 'mvn test'
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Performing code analysis...'
                // Perform code analysis using SonarQube
                sh 'mvn sonar:sonar'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Performing security scan...'
                // Perform security scan using OWASP Dependency-Check
                sh 'mvn dependency-check:check'
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging...'
                // Deploy to staging environment
                sh 'deploy-to-staging.sh'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging...'
                // Run integration tests on staging environment
                sh 'run-staging-tests.sh'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production...'
                // Deploy to production environment
                sh 'deploy-to-production.sh'
            }
        }
    }
    post {
        always {
            mail to: 'developer@example.com',
                 subject: "Pipeline ${currentBuild.fullDisplayName}",
                 body: "Pipeline ${currentBuild.fullDisplayName} completed with status ${currentBuild.currentResult}"
        }
    }
}
